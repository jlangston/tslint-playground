{"version":3,"sources":["../node_modules/tslint/lib/rules/noUnnecessaryCallbackWrapperRule.js"],"names":["Object","defineProperty","exports","value","templateObject_1","templateObject_2","tslib_1","__webpack_require__","tsutils_1","ts","Lint","Rule","_super","apply","this","arguments","__extends","FAILURE_STRING","cbText","prototype","sourceFile","applyWithFunction","walk","metadata","ruleName","description","Utils","dedent","__makeTemplateObject","optionsDescription","options","optionExamples","rationale","type","typescriptOnly","Rules","AbstractRule","ctx","forEachChild","cb","node","isArrowFunction","hasModifier","modifiers","SyntaxKind","AsyncKeyword","isCallExpression","body","isIdentifier","expression","parameters","args","length","i","_a","dotDotDotToken","name","arg","undefined","isSpreadElement","text","isRedundantCallback","start","getStart","addFailure","end","Replacement","deleteFromTo"],"mappings":"qDAiBAA,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAoEAC,EAAAC,EApEAC,EAAAC,EAAA,GACAC,EAAAD,EAAA,KACAE,EAAAF,EAAA,IACAG,EAAAH,EAAA,MACAI,EAAA,SAAAC,GAEA,SAAAD,IACA,cAAAC,KAAAC,MAAAC,KAAAC,YAAAD,KAoBA,OAtBAR,EAAAU,UAAAL,EAAAC,GAKAD,EAAAM,eAAA,SAAAC,GACA,0BAAAA,EAAA,gDAEAP,EAAAQ,UAAAN,MAAA,SAAAO,GACA,OAAAN,KAAAO,kBAAAD,EAAAE,IAGAX,EAAAY,UACAC,SAAA,kCACAC,YAAAf,EAAAgB,MAAAC,OAAAvB,MAAAE,EAAAsB,sBAAA,kUACAC,mBAAA,oBACAC,QAAA,KACAC,iBAAA,GACAC,UAAAtB,EAAAgB,MAAAC,OAAAtB,MAAAC,EAAAsB,sBAAA,saACAK,KAAA,QACAC,gBAAA,GAEAvB,EAvBA,CAwBCD,EAAAyB,MAAAC,cAED,SAAAd,EAAAe,GACA,OAAA5B,EAAA6B,aAAAD,EAAAjB,WACA,SAAAmB,EAAAC,GACA,KAAAhC,EAAAiC,gBAAAD,KAAAhC,EAAAkC,YAAAF,EAAAG,UAAAlC,EAAAmC,WAAAC,eACArC,EAAAsC,iBAAAN,EAAAO,OAAAvC,EAAAwC,aAAAR,EAAAO,KAAAE,aAaA,SAAAC,EAAAC,EAAAF,GACA,GAAAC,EAAAE,SAAAD,EAAAC,OACA,SAEA,QAAAC,EAAA,EAAmBA,EAAAH,EAAAE,SAAuBC,EAAA,CAC1C,IAAAC,EAAAJ,EAAAG,GAAAE,EAAAD,EAAAC,eAAAC,EAAAF,EAAAE,KACAC,EAAAN,EAAAE,GACA,QAAAK,IAAAH,EAAA,CACA,IAAA/C,EAAAmD,gBAAAF,GACA,SAEAA,IAAAR,WAEA,IAAAzC,EAAAwC,aAAAQ,KAAAhD,EAAAwC,aAAAS,IAAAD,EAAAI,OAAAH,EAAAG,MAEAX,EAAAW,OAAAJ,EAAAI,KACA,SAGA,SA/BAC,CAAArB,EAAAU,WAAAV,EAAAO,KAAAhC,UAAAyB,EAAAO,KAAAE,aAQA,OAAAxC,EAAA6B,aAAAE,EAAAD,GAPA,IAAAuB,EAAAtB,EAAAuB,SAAA1B,EAAAjB,YACAiB,EAAA2B,WAAAF,EAAAtB,EAAAyB,IAAAtD,EAAAM,eAAAuB,EAAAO,KAAAE,WAAAW,OACAlD,EAAAwD,YAAAC,aAAAL,EAAAtB,EAAAO,KAAAgB,SAAA1B,EAAAjB,aACAV,EAAAwD,YAAAC,aAAA3B,EAAAO,KAAAE,WAAAgB,IAAAzB,EAAAyB,SAVA/D,EAAAS","file":"static/js/64.f76b7584.chunk.js","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2017 Palantir Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar tsutils_1 = require(\"tsutils\");\nvar ts = require(\"typescript\");\nvar Lint = require(\"../index\");\nvar Rule = /** @class */ (function (_super) {\n    tslib_1.__extends(Rule, _super);\n    function Rule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /* tslint:enable:object-literal-sort-keys */\n    Rule.FAILURE_STRING = function (cbText) {\n        return \"No need to wrap '\" + cbText + \"' in another function. Just use it directly.\";\n    };\n    Rule.prototype.apply = function (sourceFile) {\n        return this.applyWithFunction(sourceFile, walk);\n    };\n    /* tslint:disable:object-literal-sort-keys */\n    Rule.metadata = {\n        ruleName: \"no-unnecessary-callback-wrapper\",\n        description: Lint.Utils.dedent(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n            Replaces `x => f(x)` with just `f`.\\n            To catch more cases, enable `only-arrow-functions` and `arrow-return-shorthand` too.\"], [\"\\n            Replaces \\\\`x => f(x)\\\\` with just \\\\`f\\\\`.\\n            To catch more cases, enable \\\\`only-arrow-functions\\\\` and \\\\`arrow-return-shorthand\\\\` too.\"]))),\n        optionsDescription: \"Not configurable.\",\n        options: null,\n        optionExamples: [true],\n        rationale: Lint.Utils.dedent(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([\"\\n            There's generally no reason to wrap a function with a callback wrapper if it's directly called anyway.\\n            Doing so creates extra inline lambdas that slow the runtime down.\\n        \"], [\"\\n            There's generally no reason to wrap a function with a callback wrapper if it's directly called anyway.\\n            Doing so creates extra inline lambdas that slow the runtime down.\\n        \"]))),\n        type: \"style\",\n        typescriptOnly: false,\n    };\n    return Rule;\n}(Lint.Rules.AbstractRule));\nexports.Rule = Rule;\nfunction walk(ctx) {\n    return ts.forEachChild(ctx.sourceFile, cb);\n    function cb(node) {\n        if (tsutils_1.isArrowFunction(node) && !tsutils_1.hasModifier(node.modifiers, ts.SyntaxKind.AsyncKeyword) &&\n            tsutils_1.isCallExpression(node.body) && tsutils_1.isIdentifier(node.body.expression) &&\n            isRedundantCallback(node.parameters, node.body.arguments, node.body.expression)) {\n            var start = node.getStart(ctx.sourceFile);\n            ctx.addFailure(start, node.end, Rule.FAILURE_STRING(node.body.expression.text), [\n                Lint.Replacement.deleteFromTo(start, node.body.getStart(ctx.sourceFile)),\n                Lint.Replacement.deleteFromTo(node.body.expression.end, node.end),\n            ]);\n        }\n        else {\n            return ts.forEachChild(node, cb);\n        }\n    }\n}\nfunction isRedundantCallback(parameters, args, expression) {\n    if (parameters.length !== args.length) {\n        return false;\n    }\n    for (var i = 0; i < parameters.length; ++i) {\n        var _a = parameters[i], dotDotDotToken = _a.dotDotDotToken, name = _a.name;\n        var arg = args[i];\n        if (dotDotDotToken !== undefined) {\n            if (!tsutils_1.isSpreadElement(arg)) {\n                return false;\n            }\n            arg = arg.expression;\n        }\n        if (!tsutils_1.isIdentifier(name) || !tsutils_1.isIdentifier(arg) || name.text !== arg.text\n            // If the invoked expression is one of the parameters, bail.\n            || expression.text === name.text) {\n            return false;\n        }\n    }\n    return true;\n}\nvar templateObject_1, templateObject_2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslint/lib/rules/noUnnecessaryCallbackWrapperRule.js\n// module id = 2097\n// module chunks = 64"],"sourceRoot":""}