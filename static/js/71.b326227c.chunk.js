webpackJsonp([71],{2088:function(e,n,a){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var t=a(1),i=a(842),o=a(55),s=a(1116),r=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return t.__extends(n,e),n.FAILURE_STRING_FACTORY=function(e){return"Shadowed name: '"+e+"'"},n.prototype.apply=function(e){return this.applyWithWalker(new p(e,this.ruleName,(n=this.ruleArguments[0],t.__assign({class:!0,enum:!0,function:!0,import:!0,interface:!0,namespace:!0,temporalDeadZone:!0,typeAlias:!0,typeParameter:!0},n))));var n},n.metadata={ruleName:"no-shadowed-variable",description:"Disallows shadowing variable declarations.",rationale:s.Utils.dedent(l||(l=t.__makeTemplateObject(["\n            Shadowing a variable masks access to it and obscures to what value an identifier actually refers.\n            For example, in the following code, it can be confusing why the filter is likely never true:\n\n            ```\n            const findNeighborsWithin = (instance: MyClass, instances: MyClass[]): MyClass[] => {\n                return instances.filter((instance) => instance.neighbors.includes(instance));\n            };\n            ```\n        "],["\n            Shadowing a variable masks access to it and obscures to what value an identifier actually refers.\n            For example, in the following code, it can be confusing why the filter is likely never true:\n\n            \\`\\`\\`\n            const findNeighborsWithin = (instance: MyClass, instances: MyClass[]): MyClass[] => {\n                return instances.filter((instance) => instance.neighbors.includes(instance));\n            };\n            \\`\\`\\`\n        "]))),optionsDescription:s.Utils.dedent(c||(c=t.__makeTemplateObject(['\n            You can optionally pass an object to disable checking for certain kinds of declarations.\n            Possible keys are `"class"`, `"enum"`, `"function"`, `"import"`, `"interface"`, `"namespace"`, `"typeAlias"`\n            and `"typeParameter"`. Just set the value to `false` for the check you want to disable.\n            All checks default to `true`, i.e. are enabled by default.\n            Note that you cannot disable variables and parameters.\n\n            The option `"temporalDeadZone"` defaults to `true` which shows errors when shadowing block scoped declarations in their\n            temporal dead zone. When set to `false` parameters, classes, enums and variables declared\n            with `let` or `const` are not considered shadowed if the shadowing occurs within their\n            [temporal dead zone](http://jsrocks.org/2015/01/temporal-dead-zone-tdz-demystified).\n\n            The following example shows how the `"temporalDeadZone"` option changes the linting result:\n\n            ```ts\n            function fn(value) {\n                if (value) {\n                    const tmp = value; // no error on this line if "temporalDeadZone" is false\n                    return tmp;\n                }\n                let tmp = undefined;\n                if (!value) {\n                    const tmp = value; // this line always contains an error\n                    return tmp;\n                }\n            }\n            ```\n        '],['\n            You can optionally pass an object to disable checking for certain kinds of declarations.\n            Possible keys are \\`"class"\\`, \\`"enum"\\`, \\`"function"\\`, \\`"import"\\`, \\`"interface"\\`, \\`"namespace"\\`, \\`"typeAlias"\\`\n            and \\`"typeParameter"\\`. Just set the value to \\`false\\` for the check you want to disable.\n            All checks default to \\`true\\`, i.e. are enabled by default.\n            Note that you cannot disable variables and parameters.\n\n            The option \\`"temporalDeadZone"\\` defaults to \\`true\\` which shows errors when shadowing block scoped declarations in their\n            temporal dead zone. When set to \\`false\\` parameters, classes, enums and variables declared\n            with \\`let\\` or \\`const\\` are not considered shadowed if the shadowing occurs within their\n            [temporal dead zone](http://jsrocks.org/2015/01/temporal-dead-zone-tdz-demystified).\n\n            The following example shows how the \\`"temporalDeadZone"\\` option changes the linting result:\n\n            \\`\\`\\`ts\n            function fn(value) {\n                if (value) {\n                    const tmp = value; // no error on this line if "temporalDeadZone" is false\n                    return tmp;\n                }\n                let tmp = undefined;\n                if (!value) {\n                    const tmp = value; // this line always contains an error\n                    return tmp;\n                }\n            }\n            \\`\\`\\`\n        ']))),options:{type:"object",properties:{class:{type:"boolean"},enum:{type:"boolean"},function:{type:"boolean"},import:{type:"boolean"},interface:{type:"boolean"},namespace:{type:"boolean"},typeAlias:{type:"boolean"},typeParameter:{type:"boolean"},temporalDeadZone:{type:"boolean"}}},optionExamples:[!0,[!0,{class:!0,enum:!0,function:!0,interface:!1,namespace:!0,typeAlias:!1,typeParameter:!1}]],type:"functionality",typescriptOnly:!1},n}(s.Rules.AbstractRule);n.Rule=r;var l,c,d=function(){function e(e){this.variables=new Map,this.variablesSeen=new Map,this.reassigned=new Set,this.functionScope=void 0!==e?e:this}return e.prototype.addVariable=function(e,n,a){void 0===n&&(n=!0),void 0===a&&(a=!1);var t=n?this:this.functionScope,i=t.variables.get(e.text),o={identifier:e,tdz:a};void 0===i?t.variables.set(e.text,[o]):i.push(o)},e}(),p=function(e){function n(){var n=null!==e&&e.apply(this,arguments)||this;return n.scope=new d,n}return t.__extends(n,e),n.prototype.walk=function(e){var n=this;if(!e.isDeclarationFile){this.scope=new d;var a=function(e){var t=n.scope;if((n.options.function&&i.isFunctionExpression(e)||n.options.class&&i.isClassExpression(e))&&void 0!==e.name){var s=new d;return s.addVariable(e.name,!1),n.scope=new d,i.isClassExpression(e)?n.visitClassLikeDeclaration(e,s,a):o.forEachChild(e,a),n.onScopeEnd(s),n.scope=s,n.onScopeEnd(t),void(n.scope=t)}if(void 0!==e.decorators)for(var r=0,l=e.decorators;r<l.length;r++){var c=l[r];o.forEachChild(c,a)}var p=i.isScopeBoundary(e);switch(2===p?n.scope=new d(t.functionScope):1===p&&(n.scope=new d),e.kind){case o.SyntaxKind.Decorator:return;case o.SyntaxKind.VariableDeclarationList:n.handleVariableDeclarationList(e);break;case o.SyntaxKind.TypeParameter:n.options.typeParameter&&n.scope.addVariable(e.name);break;case o.SyntaxKind.FunctionDeclaration:n.options.function&&void 0!==e.name&&t.addVariable(e.name,!1);break;case o.SyntaxKind.ClassDeclaration:n.options.class&&void 0!==e.name&&t.addVariable(e.name,!0,!0);case o.SyntaxKind.ClassExpression:return n.visitClassLikeDeclaration(e,t,a),n.onScopeEnd(t),void(n.scope=t);case o.SyntaxKind.TypeAliasDeclaration:n.options.typeAlias&&t.addVariable(e.name);break;case o.SyntaxKind.EnumDeclaration:n.options.enum&&t.addVariable(e.name,!0,!0);break;case o.SyntaxKind.InterfaceDeclaration:n.options.interface&&t.addVariable(e.name);break;case o.SyntaxKind.Parameter:e.parent.kind!==o.SyntaxKind.IndexSignature&&!i.isThisParameter(e)&&i.isFunctionWithBody(e.parent)&&n.handleBindingName(e.name,!1,!0);break;case o.SyntaxKind.ModuleDeclaration:if(n.options.namespace&&e.parent.kind!==o.SyntaxKind.ModuleDeclaration&&e.name.kind===o.SyntaxKind.Identifier&&!i.isNodeFlagSet(e,o.NodeFlags.GlobalAugmentation)&&t.addVariable(e.name,!1),i.hasModifier(e.modifiers,o.SyntaxKind.DeclareKeyword))return n.onScopeEnd(t),void(n.scope=t);break;case o.SyntaxKind.ImportClause:n.options.import&&void 0!==e.name&&n.scope.addVariable(e.name,!1);break;case o.SyntaxKind.NamespaceImport:case o.SyntaxKind.ImportSpecifier:case o.SyntaxKind.ImportEqualsDeclaration:n.options.import&&n.scope.addVariable(e.name,!1)}if(0===p)return o.forEachChild(e,a);o.forEachChild(e,a),n.onScopeEnd(t),n.scope=t};o.forEachChild(e,a),this.onScopeEnd()}},n.prototype.visitClassLikeDeclaration=function(e,n,a){var t=this,s=this.scope;o.forEachChild(e,function(e){if(!i.hasModifier(e.modifiers,o.SyntaxKind.StaticKeyword))return a(e);t.scope=n,a(e),t.scope=s})},n.prototype.handleVariableDeclarationList=function(e){for(var n=i.isBlockScopedVariableDeclarationList(e),a=0,t=e.declarations;a<t.length;a++){var o=t[a];this.handleBindingName(o.name,n)}},n.prototype.handleBindingName=function(e,n,a){if(void 0===a&&(a=n),e.kind===o.SyntaxKind.Identifier)this.scope.addVariable(e,n,a);else for(var t=0,i=e.elements;t<i.length;t++){var s=i[t];s.kind!==o.SyntaxKind.OmittedExpression&&this.handleBindingName(s.name,n,a)}},n.prototype.onScopeEnd=function(e){var n=this,a=this.scope,t=a.variables;a.variablesSeen.forEach(function(a,i){for(var o=t.get(i),s=function(a){void 0!==o&&(n.options.temporalDeadZone||o.some(function(e){return!e.tdz||e.identifier.pos<a.pos}))?n.addFailureAtNode(a,r.FAILURE_STRING_FACTORY(i)):void 0!==e&&function(e,n,a){var t=e.get(n);void 0===t?e.set(n,[a]):t.push(a)}(e.variablesSeen,i,a)},l=0,c=a;l<c.length;l++){s(c[l])}}),void 0!==e&&t.forEach(function(n,a){!function(e,n,a){var t=e.get(n);void 0===t&&(t=[],e.set(n,t));for(var i=0,o=a;i<o.length;i++){var s=o[i];t.push(s.identifier)}}(e.variablesSeen,a,n)})},n}(s.AbstractWalker)}});
//# sourceMappingURL=71.b326227c.chunk.js.map