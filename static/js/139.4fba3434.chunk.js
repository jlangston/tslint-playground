webpackJsonp([139],{2019:function(e,a,n){"use strict";Object.defineProperty(a,"__esModule",{value:!0});var s,t=n(1),i=n(842),o=n(55),r=n(1116),l=n(56),c=function(e){function a(){return null!==e&&e.apply(this,arguments)||this}return t.__extends(a,e),a.prototype.apply=function(e){return this.applyWithFunction(e,u)},a.metadata={ruleName:"class-name",description:"Enforces PascalCased class and interface names.",rationale:r.Utils.dedent(s||(s=t.__makeTemplateObject(["\n            Makes it easy to differentiate classes from regular variables at a glance.\n\n            JavaScript and general programming convention is to refer to classes in PascalCase.\n            It's confusing to use camelCase or other conventions for class names.\n        "],["\n            Makes it easy to differentiate classes from regular variables at a glance.\n\n            JavaScript and general programming convention is to refer to classes in PascalCase.\n            It's confusing to use camelCase or other conventions for class names.\n        "]))),optionsDescription:"Not configurable.",options:null,optionExamples:[!0],type:"style",typescriptOnly:!1},a.FAILURE_STRING="Class name must be in pascal case",a}(r.Rules.AbstractRule);function u(e){return o.forEachChild(e.sourceFile,function a(n){return(i.isClassLikeDeclaration(n)&&void 0!==n.name||i.isInterfaceDeclaration(n))&&(l.isPascalCased(n.name.text)||e.addFailureAtNode(n.name,c.FAILURE_STRING)),o.forEachChild(n,a)})}a.Rule=c}});
//# sourceMappingURL=139.4fba3434.chunk.js.map