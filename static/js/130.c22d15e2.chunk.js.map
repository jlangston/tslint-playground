{"version":3,"sources":["../node_modules/tslint/lib/rules/importBlacklistRule.js"],"names":["Object","defineProperty","exports","value","templateObject_1","templateObject_2","tslib_1","__webpack_require__","tsutils_1","Lint","Rule","_super","apply","this","arguments","__extends","prototype","isEnabled","call","ruleArguments","length","sourceFile","applyWithFunction","walk","metadata","ruleName","description","Utils","dedent","__makeTemplateObject","rationale","optionsDescription","options","type","items","minLength","optionExamples","typescriptOnly","FAILURE_STRING","Rules","AbstractRule","ctx","_i","_a","findImports","name","indexOf","text","addFailure","getStart","end"],"mappings":"sDAiBAA,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IA2CAC,EAAAC,EA3CAC,EAAAC,EAAA,GACAC,EAAAD,EAAA,KACAE,EAAAF,EAAA,MACAG,EAAA,SAAAC,GAEA,SAAAD,IACA,cAAAC,KAAAC,MAAAC,KAAAC,YAAAD,KA0BA,OA5BAP,EAAAS,UAAAL,EAAAC,GAIAD,EAAAM,UAAAC,UAAA,WACA,OAAAN,EAAAK,UAAAC,UAAAC,KAAAL,YAAAM,cAAAC,OAAA,GAEAV,EAAAM,UAAAJ,MAAA,SAAAS,GACA,OAAAR,KAAAS,kBAAAD,EAAAE,EAAAV,KAAAM,gBAGAT,EAAAc,UACAC,SAAA,mBACAC,YAAAjB,EAAAkB,MAAAC,OAAAxB,MAAAE,EAAAuB,sBAAA,4VACAC,UAAArB,EAAAkB,MAAAC,OAAAvB,MAAAC,EAAAuB,sBAAA,kVACAE,mBAAA,iCACAC,SACAC,KAAA,QACAC,OACAD,KAAA,UAEAE,UAAA,GAEAC,iBAAA,wBACAH,KAAA,gBACAI,gBAAA,GAEA3B,EAAA4B,eAAA,yDACA5B,EA7BA,CA8BCD,EAAA8B,MAAAC,cAED,SAAAjB,EAAAkB,GACA,QAAAC,EAAA,EAAAC,EAAAnC,EAAAoC,YAAAH,EAAApB,WAAA,IAA8EqB,EAAAC,EAAAvB,OAAgBsB,IAAA,CAC9F,IAAAG,EAAAF,EAAAD,IACA,IAAAD,EAAAT,QAAAc,QAAAD,EAAAE,OACAN,EAAAO,WAAAH,EAAAI,SAAAR,EAAApB,YAAA,EAAAwB,EAAAK,IAAA,EAAAxC,EAAA4B,iBALApC,EAAAQ","file":"static/js/130.c22d15e2.chunk.js","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2016 Palantir Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar tsutils_1 = require(\"tsutils\");\nvar Lint = require(\"../index\");\nvar Rule = /** @class */ (function (_super) {\n    tslib_1.__extends(Rule, _super);\n    function Rule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Rule.prototype.isEnabled = function () {\n        return _super.prototype.isEnabled.call(this) && this.ruleArguments.length > 0;\n    };\n    Rule.prototype.apply = function (sourceFile) {\n        return this.applyWithFunction(sourceFile, walk, this.ruleArguments);\n    };\n    /* tslint:disable:object-literal-sort-keys */\n    Rule.metadata = {\n        ruleName: \"import-blacklist\",\n        description: Lint.Utils.dedent(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n            Disallows importing the specified modules directly via `import` and `require`.\\n            Instead only sub modules may be imported from that module.\"], [\"\\n            Disallows importing the specified modules directly via \\\\`import\\\\` and \\\\`require\\\\`.\\n            Instead only sub modules may be imported from that module.\"]))),\n        rationale: Lint.Utils.dedent(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([\"\\n            Some libraries allow importing their submodules instead of the entire module.\\n            This is good practise as it avoids loading unused modules.\"], [\"\\n            Some libraries allow importing their submodules instead of the entire module.\\n            This is good practise as it avoids loading unused modules.\"]))),\n        optionsDescription: \"A list of blacklisted modules.\",\n        options: {\n            type: \"array\",\n            items: {\n                type: \"string\",\n            },\n            minLength: 1,\n        },\n        optionExamples: [true, [true, \"rxjs\", \"lodash\"]],\n        type: \"functionality\",\n        typescriptOnly: false,\n    };\n    Rule.FAILURE_STRING = \"This import is blacklisted, import a submodule instead\";\n    return Rule;\n}(Lint.Rules.AbstractRule));\nexports.Rule = Rule;\nfunction walk(ctx) {\n    for (var _i = 0, _a = tsutils_1.findImports(ctx.sourceFile, 63 /* All */); _i < _a.length; _i++) {\n        var name = _a[_i];\n        if (ctx.options.indexOf(name.text) !== -1) {\n            ctx.addFailure(name.getStart(ctx.sourceFile) + 1, name.end - 1, Rule.FAILURE_STRING);\n        }\n    }\n}\nvar templateObject_1, templateObject_2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslint/lib/rules/importBlacklistRule.js\n// module id = 2029\n// module chunks = 130"],"sourceRoot":""}