webpackJsonp([45],{2117:function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=r(1),n=r(842),i=r(55),s=r(1116),a=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return o.__extends(e,t),e.prototype.apply=function(t){return this.applyWithWalker(new m(t,this.ruleName,(e=this.ruleArguments,r=e[0],n=(o=void 0===r?{}:r)["grouped-imports"],i=void 0!==n&&n,s=o["import-sources-order"],a=void 0===s?"case-insensitive":s,p=o["named-imports-order"],u=void 0===p?"case-insensitive":p,l=o["module-source-path"],d=void 0===l?"full":l,{groupedImports:i,importSourcesOrderTransform:c.get(a),moduleSourcePath:c.get(d),namedImportsOrderTransform:c.get(u)})));var e,r,o,n,i,s,a,p,u,l,d},e.metadata={ruleName:"ordered-imports",description:"Requires that import statements be alphabetized and grouped.",descriptionDetails:s.Utils.dedent(u||(u=o.__makeTemplateObject(['\n            Enforce a consistent ordering for ES6 imports:\n            - Named imports must be alphabetized (i.e. "import {A, B, C} from "foo";")\n                - The exact ordering can be controlled by the named-imports-order option.\n                - "longName as name" imports are ordered by "longName".\n            - Import sources must be alphabetized within groups, i.e.:\n                    import * as foo from "a";\n                    import * as bar from "b";\n            - Groups of imports are delineated by blank lines. You can use these to group imports\n                however you like, e.g. by first- vs. third-party or thematically or can you can\n                enforce a grouping of third-party, parent directories and the current directory.'],['\n            Enforce a consistent ordering for ES6 imports:\n            - Named imports must be alphabetized (i.e. "import {A, B, C} from "foo";")\n                - The exact ordering can be controlled by the named-imports-order option.\n                - "longName as name" imports are ordered by "longName".\n            - Import sources must be alphabetized within groups, i.e.:\n                    import * as foo from "a";\n                    import * as bar from "b";\n            - Groups of imports are delineated by blank lines. You can use these to group imports\n                however you like, e.g. by first- vs. third-party or thematically or can you can\n                enforce a grouping of third-party, parent directories and the current directory.']))),hasFix:!0,optionsDescription:s.Utils.dedent(l||(l=o.__makeTemplateObject(['\n            You may set the `"import-sources-order"` option to control the ordering of source\n            imports (the `"foo"` in `import {A, B, C} from "foo"`).\n\n            Possible values for `"import-sources-order"` are:\n\n            * `"case-insensitive\'`: Correct order is `"Bar"`, `"baz"`, `"Foo"`. (This is the default.)\n            * `"lowercase-first"`: Correct order is `"baz"`, `"Bar"`, `"Foo"`.\n            * `"lowercase-last"`: Correct order is `"Bar"`, `"Foo"`, `"baz"`.\n            * `"any"`: Allow any order.\n\n            You may set the `"grouped-imports"` option to control the grouping of source\n            imports (the `"foo"` in `import {A, B, C} from "foo"`).\n\n            Possible values for `"grouped-imports"` are:\n\n            * `false`: Do not enforce grouping. (This is the default.)\n            * `true`: Group source imports by `"bar"`, `"../baz"`, `"./foo"`.\n\n            You may set the `"named-imports-order"` option to control the ordering of named\n            imports (the `{A, B, C}` in `import {A, B, C} from "foo"`).\n\n            Possible values for `"named-imports-order"` are:\n\n            * `"case-insensitive\'`: Correct order is `{A, b, C}`. (This is the default.)\n            * `"lowercase-first"`: Correct order is `{b, A, C}`.\n            * `"lowercase-last"`: Correct order is `{A, C, b}`.\n            * `"any"`: Allow any order.\n\n            You may set the `"module-source-path"` option to control the ordering of imports based full path\n            or just the module name\n\n            Possible values for `"module-source-path"` are:\n\n            * `"full\'`: Correct order is  `"./a/Foo"`, `"./b/baz"`, `"./c/Bar"`. (This is the default.)\n            * `"basename"`: Correct order is `"./c/Bar"`, `"./b/baz"`, `"./a/Foo"`.\n\n        '],['\n            You may set the \\`"import-sources-order"\\` option to control the ordering of source\n            imports (the \\`"foo"\\` in \\`import {A, B, C} from "foo"\\`).\n\n            Possible values for \\`"import-sources-order"\\` are:\n\n            * \\`"case-insensitive\'\\`: Correct order is \\`"Bar"\\`, \\`"baz"\\`, \\`"Foo"\\`. (This is the default.)\n            * \\`"lowercase-first"\\`: Correct order is \\`"baz"\\`, \\`"Bar"\\`, \\`"Foo"\\`.\n            * \\`"lowercase-last"\\`: Correct order is \\`"Bar"\\`, \\`"Foo"\\`, \\`"baz"\\`.\n            * \\`"any"\\`: Allow any order.\n\n            You may set the \\`"grouped-imports"\\` option to control the grouping of source\n            imports (the \\`"foo"\\` in \\`import {A, B, C} from "foo"\\`).\n\n            Possible values for \\`"grouped-imports"\\` are:\n\n            * \\`false\\`: Do not enforce grouping. (This is the default.)\n            * \\`true\\`: Group source imports by \\`"bar"\\`, \\`"../baz"\\`, \\`"./foo"\\`.\n\n            You may set the \\`"named-imports-order"\\` option to control the ordering of named\n            imports (the \\`{A, B, C}\\` in \\`import {A, B, C} from "foo"\\`).\n\n            Possible values for \\`"named-imports-order"\\` are:\n\n            * \\`"case-insensitive\'\\`: Correct order is \\`{A, b, C}\\`. (This is the default.)\n            * \\`"lowercase-first"\\`: Correct order is \\`{b, A, C}\\`.\n            * \\`"lowercase-last"\\`: Correct order is \\`{A, C, b}\\`.\n            * \\`"any"\\`: Allow any order.\n\n            You may set the \\`"module-source-path"\\` option to control the ordering of imports based full path\n            or just the module name\n\n            Possible values for \\`"module-source-path"\\` are:\n\n            * \\`"full\'\\`: Correct order is  \\`"./a/Foo"\\`, \\`"./b/baz"\\`, \\`"./c/Bar"\\`. (This is the default.)\n            * \\`"basename"\\`: Correct order is \\`"./c/Bar"\\`, \\`"./b/baz"\\`, \\`"./a/Foo"\\`.\n\n        ']))),options:{type:"object",properties:{"grouped-imports":{type:"boolean"},"import-sources-order":{type:"string",enum:["case-insensitive","lowercase-first","lowercase-last","any"]},"named-imports-order":{type:"string",enum:["case-insensitive","lowercase-first","lowercase-last","any"]},"module-source-path":{type:"string",enum:["full","basename"]}},additionalProperties:!1},optionExamples:[!0,[!0,{"import-sources-order":"lowercase-last","named-imports-order":"lowercase-first"}]],type:"style",typescriptOnly:!1},e.IMPORT_SOURCES_NOT_GROUPED="Import sources of different groups must be sorted by: libraries, parent directories, current directory.",e.IMPORT_SOURCES_UNORDERED="Import sources within a group must be alphabetized.",e.NAMED_IMPORTS_UNORDERED="Named imports must be alphabetized.",e}(s.Rules.AbstractRule);e.Rule=a;var p,c=new Map([["any",function(){return""}],["case-insensitive",function(t){return t.toLowerCase()}],["lowercase-first",function(t){return Array.from(t).map(function(t){return t>="a"&&t<="z"?t.toUpperCase():t>="A"&&t<="Z"?t.toLowerCase():t}).join("")}],["lowercase-last",function(t){return t}],["full",function(t){return t}],["basename",function(t){if(!i.isExternalModuleNameRelative(t))return t;var e=t.lastIndexOf("/");return-1===e?t:t.substr(e+1)}]]);!function(t){t[t.LIBRARY_IMPORT=1]="LIBRARY_IMPORT",t[t.PARENT_DIRECTORY_IMPORT=2]="PARENT_DIRECTORY_IMPORT",t[t.CURRENT_DIRECTORY_IMPORT=3]="CURRENT_DIRECTORY_IMPORT"}(p||(p={}));var u,l,m=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.importsBlocks=[new d],e.nextType=p.LIBRARY_IMPORT,e}return o.__extends(e,t),Object.defineProperty(e.prototype,"currentImportsBlock",{get:function(){return this.importsBlocks[this.importsBlocks.length-1]},enumerable:!0,configurable:!0}),e.prototype.walk=function(t){for(var e=0,r=t.statements;e<r.length;e++){var o=r[e];this.checkStatement(o)}this.endBlock(),this.options.groupedImports&&this.checkBlocksGrouping()},e.prototype.checkStatement=function(t){if((!n.isImportDeclaration(t)&&!n.isImportEqualsDeclaration(t)||/\r?\n\r?\n/.test(this.sourceFile.text.slice(t.getFullStart(),t.getStart(this.sourceFile))))&&this.endBlock(),n.isImportDeclaration(t))this.checkImportDeclaration(t);else if(n.isImportEqualsDeclaration(t))this.checkImportEqualsDeclaration(t);else if(n.isModuleDeclaration(t)){var e=function(t){var e=t.body;for(;void 0!==e&&e.kind===i.SyntaxKind.ModuleDeclaration;)e=e.body;return void 0!==e&&e.kind===i.SyntaxKind.ModuleBlock?e:void 0}(t);if(void 0!==e){for(var r=0,o=e.statements;r<o.length;r++){var s=o[r];this.checkStatement(s)}this.endBlock()}}},e.prototype.checkImportDeclaration=function(t){if(n.isStringLiteral(t.moduleSpecifier)){var e=this.options.importSourcesOrderTransform(h(t.moduleSpecifier.text));this.checkSource(e,t);var r=t.importClause;void 0!==r&&void 0!==r.namedBindings&&n.isNamedImports(r.namedBindings)&&this.checkNamedImports(r.namedBindings)}},e.prototype.checkImportEqualsDeclaration=function(t){var e=t.moduleReference;if(n.isExternalModuleReference(e)){var r=e.expression;if(void 0!==r&&n.isStringLiteral(r)){var o=this.options.importSourcesOrderTransform(h(r.text));this.checkSource(o,t)}}},e.prototype.checkSource=function(t,e){var r=this.options.moduleSourcePath(t),o=this.currentImportsBlock.getLastImportSource();this.currentImportsBlock.addImportDeclaration(this.sourceFile,e,r),null!==o&&-1===f(r,o)&&(this.lastFix=[],this.addFailureAtNode(e,a.IMPORT_SOURCES_UNORDERED,this.lastFix))},e.prototype.endBlock=function(){if(void 0!==this.lastFix){var t=this.currentImportsBlock.getReplacement();void 0!==t&&this.lastFix.push(t),this.lastFix=void 0}this.importsBlocks.push(new d)},e.prototype.checkNamedImports=function(t){var e=this,r=t.elements,o=function(t,e){for(var r=1;r<t.length;r++)if(e(t[r].getText())<e(t[r-1].getText()))return[t[r-1],t[r]];return}(r,this.options.namedImportsOrderTransform);if(void 0!==o){for(var n=o[0],i=o[1],s=y(r,function(t){return e.options.namedImportsOrderTransform(t.getText())}).map(function(t){return t.getText()}),p=r.length-1;p>=0;p--){var c=r[p].getStart(),u=r[p].getText().length;this.currentImportsBlock.replaceNamedImports(c,u,s[p])}this.lastFix=[],this.addFailure(n.getStart(),i.getEnd(),a.NAMED_IMPORTS_UNORDERED,this.lastFix)}},e.prototype.checkBlocksGrouping=function(){this.importsBlocks.some(this.checkBlockGroups,this)},e.prototype.checkBlockGroups=function(t){var e=this.getOddImportDeclaration(t);return void 0!==e&&(this.addFailureAtNode(e.node,a.IMPORT_SOURCES_NOT_GROUPED,this.getReplacements()),!0)},e.prototype.getOddImportDeclaration=function(t){var e=t.getImportDeclarations();if(0!==e.length){var r=e[0].type;return r<this.nextType?e[0]:(this.nextType=r,e.find(function(t){return t.type!==r}))}},e.prototype.getReplacements=function(){var t,e=this.importsBlocks.map(function(t){return t.getImportDeclarations()}).filter(function(t){return t.length>0}),r=(t=[]).concat.apply(t,e),o=this.getReplacementsForExistingImports(e),n=0===r.length?0:r[0].nodeStartOffset;return o.push(s.Replacement.appendText(n,this.getGroupedImports(r))),o},e.prototype.getReplacementsForExistingImports=function(t){var e=this;return t.map(function(r,o){var n=r[0].nodeStartOffset;if(o>0){var i=t[o-1],a=i[i.length-1];/[\r\n]+/.test(e.sourceFile.text.slice(a.nodeEndOffset,n))&&(n=a.nodeEndOffset)}return s.Replacement.deleteFromTo(n,r[r.length-1].nodeEndOffset)})},e.prototype.getGroupedImports=function(t){return[p.LIBRARY_IMPORT,p.PARENT_DIRECTORY_IMPORT,p.CURRENT_DIRECTORY_IMPORT].map(function(e){return g(t.filter(function(t){return t.type===e}))}).filter(function(t){return t.length>0}).join(this.getEolChar())},e.prototype.getEolChar=function(){var t,e=this.sourceFile.getLineEndOfPosition(0);return e>0&&(e>1&&"\r"===this.sourceFile.text[e-1]?t="\r\n":"\n"===this.sourceFile.text[e]&&(t="\n")),void 0===t?i.sys.newLine:t},e}(s.AbstractWalker),d=function(){function t(){this.importDeclarations=[]}return t.prototype.addImportDeclaration=function(t,e,r){var o=this.getStartOffset(e),n=this.getEndOffset(t,e),i=t.text.substring(o,n),s=this.getImportType(r);o>e.getStart()||0===n?this.importDeclarations=[]:this.importDeclarations.push({node:e,nodeEndOffset:n,nodeStartOffset:o,sourcePath:r,text:i,type:s})},t.prototype.getImportDeclarations=function(){return this.importDeclarations},t.prototype.replaceNamedImports=function(t,e,r){var o=this.getLastImportDeclaration();if(void 0!==o){var n=t-o.nodeStartOffset;if(n<0||n+e>o.node.getEnd())throw new Error("Unexpected named import position");var i=o.text;o.text=i.substring(0,n)+r+i.substring(n+e)}},t.prototype.getLastImportSource=function(){return 0===this.importDeclarations.length?null:this.getLastImportDeclaration().sourcePath},t.prototype.getReplacement=function(){if(0!==this.importDeclarations.length){var t=g(this.importDeclarations),e=this.importDeclarations[0].nodeStartOffset,r=this.getLastImportDeclaration().nodeEndOffset;return new s.Replacement(e,r-e,t)}},t.prototype.getStartOffset=function(t){return 0===this.importDeclarations.length?t.getStart():this.getLastImportDeclaration().nodeEndOffset},t.prototype.getEndOffset=function(t,e){return t.text.indexOf("\n",e.end)+1},t.prototype.getLastImportDeclaration=function(){return this.importDeclarations[this.importDeclarations.length-1]},t.prototype.getImportType=function(t){return"."===t.charAt(0)?"."===t.charAt(1)?p.PARENT_DIRECTORY_IMPORT:p.CURRENT_DIRECTORY_IMPORT:p.LIBRARY_IMPORT},t}();function f(t,e){function r(t){return"."===t[0]||"/"===t[0]}return r(t)&&!r(e)?1:!r(t)&&r(e)?-1:t>e?1:t<e?-1:0}function h(t){return t.length>1&&("'"===t[0]||'"'===t[0])&&(t=t.substr(1,t.length-2)),t}function g(t){return y(t.slice(),function(t){return t.sourcePath}).map(function(t){return t.text}).join("")}function y(t,e){return t.slice().sort(function(t,r){return f(e(t),e(r))})}}});
//# sourceMappingURL=45.d06a435d.chunk.js.map