{"version":3,"sources":["../node_modules/tslint/lib/rules/noInvalidThisRule.js"],"names":["Object","defineProperty","exports","value","templateObject_1","tslib_1","__webpack_require__","tsutils_1","ts","Lint","Rule","_super","apply","this","arguments","__extends","prototype","sourceFile","_this","hasOption","name","ruleArguments","indexOf","checkFuncInMethod","applyWithFunction","walk","metadata","ruleName","description","rationale","optionsDescription","Utils","dedent","__makeTemplateObject","options","type","items","enum","minLength","maxLength","optionExamples","typescriptOnly","FAILURE_STRING_OUTSIDE","FAILURE_STRING_INSIDE","Rules","AbstractRule","ctx","inClass","inFunctionInClass","forEachChild","cb","node","kind","SyntaxKind","ClassDeclaration","ClassExpression","FunctionDeclaration","FunctionExpression","parameters","some","isThisParameter","ThisKeyword","addFailureAtNode"],"mappings":"qDAiBAA,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAkFAC,EAlFAC,EAAAC,EAAA,GACAC,EAAAD,EAAA,KACAE,EAAAF,EAAA,IACAG,EAAAH,EAAA,MAGAI,EAAA,SAAAC,GAEA,SAAAD,IACA,cAAAC,KAAAC,MAAAC,KAAAC,YAAAD,KA+BA,OAjCAR,EAAAU,UAAAL,EAAAC,GAIAD,EAAAM,UAAAJ,MAAA,SAAAK,GACA,IAAAC,EAAAL,KACAM,EAAA,SAAAC,GAAyC,WAAAF,EAAAG,cAAAC,QAAAF,IACzCG,EAAAJ,EATA,kCASAA,EAVA,4BAWA,OAAAN,KAAAW,kBAAAP,EAAAQ,EAAAF,IAGAb,EAAAgB,UACAC,SAAA,kBACAC,YAAA,yDACAC,UAAA,0GACAC,mBAAArB,EAAAsB,MAAAC,OAAA5B,MAAAC,EAAA4B,sBAAA,yTAlBA,4BAmBAC,SACAC,KAAA,QACAC,OACAD,KAAA,SACAE,MAvBA,6BAyBAC,UAAA,EACAC,UAAA,GAEAC,iBAAA,MA5BA,6BA6BAL,KAAA,gBACAM,gBAAA,GAGA/B,EAAAgC,uBAAA,2DACAhC,EAAAiC,sBAAA,wGAEAjC,EAlCA,CAmCCD,EAAAmC,MAAAC,cAED,SAAApB,EAAAqB,GACA,IAAA7B,EAAA6B,EAAA7B,WAAAM,EAAAuB,EAAAZ,QACAa,GAAA,EACAC,GAAA,EACAxC,EAAAyC,aAAAhC,EAAA,SAAAiC,EAAAC,GACA,OAAAA,EAAAC,MACA,KAAA5C,EAAA6C,WAAAC,iBACA,KAAA9C,EAAA6C,WAAAE,gBACA,IAAAR,EAIA,OAHAA,GAAA,EACAvC,EAAAyC,aAAAE,EAAAD,QACAH,GAAA,GAGA,MACA,KAAAvC,EAAA6C,WAAAG,oBACA,KAAAhD,EAAA6C,WAAAI,mBACA,GAAAN,EAAAO,WAAAC,KAAApD,EAAAqD,iBACA,OAEA,GAAAb,EAIA,OAHAC,GAAA,EACAxC,EAAAyC,aAAAE,EAAAD,QACAF,GAAA,GAGA,MACA,KAAAxC,EAAA6C,WAAAQ,YAOA,YANAd,EAGAxB,GAAAyB,GACAF,EAAAgB,iBAAAX,EAAAzC,EAAAiC,uBAHAG,EAAAgB,iBAAAX,EAAAzC,EAAAgC,yBAOAlC,EAAAyC,aAAAE,EAAAD,KArCAhD,EAAAQ","file":"static/js/87.26c4856d.chunk.js","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2016 Palantir Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar tsutils_1 = require(\"tsutils\");\nvar ts = require(\"typescript\");\nvar Lint = require(\"..\");\nvar OPTION_FUNCTION_IN_METHOD = \"check-function-in-method\";\nvar DEPRECATED_OPTION_FUNCTION_IN_METHOD = \"no-this-in-function-in-method\";\nvar Rule = /** @class */ (function (_super) {\n    tslib_1.__extends(Rule, _super);\n    function Rule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Rule.prototype.apply = function (sourceFile) {\n        var _this = this;\n        var hasOption = function (name) { return _this.ruleArguments.indexOf(name) !== -1; };\n        var checkFuncInMethod = hasOption(DEPRECATED_OPTION_FUNCTION_IN_METHOD) || hasOption(OPTION_FUNCTION_IN_METHOD);\n        return this.applyWithFunction(sourceFile, walk, checkFuncInMethod);\n    };\n    /* tslint:disable:object-literal-sort-keys */\n    Rule.metadata = {\n        ruleName: \"no-invalid-this\",\n        description: \"Disallows using the `this` keyword outside of classes.\",\n        rationale: \"See [the rule's author's rationale here.](https://github.com/palantir/tslint/pull/1105#issue-147549402)\",\n        optionsDescription: Lint.Utils.dedent(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n            One argument may be optionally provided:\\n\\n            * `\", \"` disallows using the `this` keyword in functions within class methods.\"], [\"\\n            One argument may be optionally provided:\\n\\n            * \\\\`\", \"\\\\` disallows using the \\\\`this\\\\` keyword in functions within class methods.\"])), OPTION_FUNCTION_IN_METHOD),\n        options: {\n            type: \"array\",\n            items: {\n                type: \"string\",\n                enum: [OPTION_FUNCTION_IN_METHOD],\n            },\n            minLength: 0,\n            maxLength: 1,\n        },\n        optionExamples: [true, [true, OPTION_FUNCTION_IN_METHOD]],\n        type: \"functionality\",\n        typescriptOnly: false,\n    };\n    /* tslint:enable:object-literal-sort-keys */\n    Rule.FAILURE_STRING_OUTSIDE = \"the \\\"this\\\" keyword is disallowed outside of a class body\";\n    Rule.FAILURE_STRING_INSIDE = \"the \\\"this\\\" keyword is disallowed in function bodies inside class methods, \" +\n        \"use arrow functions instead\";\n    return Rule;\n}(Lint.Rules.AbstractRule));\nexports.Rule = Rule;\nfunction walk(ctx) {\n    var sourceFile = ctx.sourceFile, checkFuncInMethod = ctx.options;\n    var inClass = false;\n    var inFunctionInClass = false;\n    ts.forEachChild(sourceFile, function cb(node) {\n        switch (node.kind) {\n            case ts.SyntaxKind.ClassDeclaration:\n            case ts.SyntaxKind.ClassExpression:\n                if (!inClass) {\n                    inClass = true;\n                    ts.forEachChild(node, cb);\n                    inClass = false;\n                    return;\n                }\n                break;\n            case ts.SyntaxKind.FunctionDeclaration:\n            case ts.SyntaxKind.FunctionExpression:\n                if (node.parameters.some(tsutils_1.isThisParameter)) {\n                    return;\n                }\n                if (inClass) {\n                    inFunctionInClass = true;\n                    ts.forEachChild(node, cb);\n                    inFunctionInClass = false;\n                    return;\n                }\n                break;\n            case ts.SyntaxKind.ThisKeyword:\n                if (!inClass) {\n                    ctx.addFailureAtNode(node, Rule.FAILURE_STRING_OUTSIDE);\n                }\n                else if (checkFuncInMethod && inFunctionInClass) {\n                    ctx.addFailureAtNode(node, Rule.FAILURE_STRING_INSIDE);\n                }\n                return;\n        }\n        ts.forEachChild(node, cb);\n    });\n}\nvar templateObject_1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslint/lib/rules/noInvalidThisRule.js\n// module id = 2072\n// module chunks = 87"],"sourceRoot":""}