{"version":3,"sources":["../node_modules/tslint/lib/rules/oneVariablePerDeclarationRule.js"],"names":["Object","defineProperty","exports","value","templateObject_1","tslib_1","__webpack_require__","tsutils_1","ts","Lint","Rule","_super","apply","this","arguments","__extends","prototype","sourceFile","applyWithFunction","walk","ignoreForLoop","ruleArguments","indexOf","metadata","ruleName","description","optionsDescription","Utils","dedent","__makeTemplateObject","options","type","items","enum","minLength","maxLength","optionExamples","typescriptOnly","FAILURE_STRING","Rules","AbstractRule","ctx","forEachChild","cb","node","isVariableStatement","declarationList","declarations","length","addFailureAtNode","isForStatement","initializer","undefined","kind","SyntaxKind","VariableDeclarationList"],"mappings":"qDAiBAA,OAAAC,eAAAC,EAAA,cAA8CC,OAAA,IAC9C,IAoDAC,EApDAC,EAAAC,EAAA,GACAC,EAAAD,EAAA,KACAE,EAAAF,EAAA,IACAG,EAAAH,EAAA,MAEAI,EAAA,SAAAC,GAEA,SAAAD,IACA,cAAAC,KAAAC,MAAAC,KAAAC,YAAAD,KAyBA,OA3BAR,EAAAU,UAAAL,EAAAC,GAIAD,EAAAM,UAAAJ,MAAA,SAAAK,GACA,OAAAJ,KAAAK,kBAAAD,EAAAE,GAAyDC,eAAA,IAAAP,KAAAQ,cAAAC,QAPzD,sBAUAZ,EAAAa,UACAC,SAAA,+BACAC,YAAA,6EACAC,mBAAAjB,EAAAkB,MAAAC,OAAAxB,MAAAC,EAAAwB,sBAAA,ySAbA,mBAcAC,SACAC,KAAA,QACAC,OACAD,KAAA,SACAE,MAlBA,oBAoBAC,UAAA,EACAC,UAAA,GAEAC,iBAAA,MAvBA,oBAwBAL,KAAA,QACAM,gBAAA,GAGA3B,EAAA4B,eAAA,qEACA5B,EA5BA,CA6BCD,EAAA8B,MAAAC,cAED,SAAArB,EAAAsB,GACAjC,EAAAkC,aAAAD,EAAAxB,WAAA,SAAA0B,EAAAC,GACA,GAAArC,EAAAsC,oBAAAD,MAAAE,gBAAAC,aAAAC,OAAA,EACAP,EAAAQ,iBAAAL,EAAAlC,EAAA4B,qBAEA,GAAA/B,EAAA2C,eAAAN,KAAAH,EAAAX,QAAAV,cAAA,CACA,IAAA+B,EAAAP,EAAAO,iBACAC,IAAAD,GACAA,EAAAE,OAAA7C,EAAA8C,WAAAC,yBACAJ,EAAAJ,aAAAC,OAAA,GACAP,EAAAQ,iBAAAE,EAAAzC,EAAA4B,gBAGA9B,EAAAkC,aAAAE,EAAAD,KAdAzC,EAAAQ","file":"static/js/47.9df62f61.chunk.js","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2016 Palantir Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar tsutils_1 = require(\"tsutils\");\nvar ts = require(\"typescript\");\nvar Lint = require(\"../index\");\nvar OPTION_IGNORE_FOR_LOOP = \"ignore-for-loop\";\nvar Rule = /** @class */ (function (_super) {\n    tslib_1.__extends(Rule, _super);\n    function Rule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Rule.prototype.apply = function (sourceFile) {\n        return this.applyWithFunction(sourceFile, walk, { ignoreForLoop: this.ruleArguments.indexOf(OPTION_IGNORE_FOR_LOOP) !== -1 });\n    };\n    /* tslint:disable:object-literal-sort-keys */\n    Rule.metadata = {\n        ruleName: \"one-variable-per-declaration\",\n        description: \"Disallows multiple variable definitions in the same declaration statement.\",\n        optionsDescription: Lint.Utils.dedent(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"\\n            One argument may be optionally provided:\\n\\n            * `\", \"` allows multiple variable definitions in a for loop declaration.\"], [\"\\n            One argument may be optionally provided:\\n\\n            * \\\\`\", \"\\\\` allows multiple variable definitions in a for loop declaration.\"])), OPTION_IGNORE_FOR_LOOP),\n        options: {\n            type: \"array\",\n            items: {\n                type: \"string\",\n                enum: [OPTION_IGNORE_FOR_LOOP],\n            },\n            minLength: 0,\n            maxLength: 1,\n        },\n        optionExamples: [true, [true, OPTION_IGNORE_FOR_LOOP]],\n        type: \"style\",\n        typescriptOnly: false,\n    };\n    /* tslint:enable:object-literal-sort-keys */\n    Rule.FAILURE_STRING = \"Multiple variable declarations in the same statement are forbidden\";\n    return Rule;\n}(Lint.Rules.AbstractRule));\nexports.Rule = Rule;\nfunction walk(ctx) {\n    ts.forEachChild(ctx.sourceFile, function cb(node) {\n        if (tsutils_1.isVariableStatement(node) && node.declarationList.declarations.length > 1) {\n            ctx.addFailureAtNode(node, Rule.FAILURE_STRING);\n        }\n        else if (tsutils_1.isForStatement(node) && !ctx.options.ignoreForLoop) {\n            var initializer = node.initializer;\n            if (initializer !== undefined\n                && initializer.kind === ts.SyntaxKind.VariableDeclarationList\n                && initializer.declarations.length > 1) {\n                ctx.addFailureAtNode(initializer, Rule.FAILURE_STRING);\n            }\n        }\n        ts.forEachChild(node, cb);\n    });\n}\nvar templateObject_1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslint/lib/rules/oneVariablePerDeclarationRule.js\n// module id = 2116\n// module chunks = 47"],"sourceRoot":""}