webpackJsonp([22],{2143:function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n,a=i(1),l=i(843),r=i(55),o=i(1117),s=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return a.__extends(t,e),t.prototype.apply=function(e){return this.applyWithFunction(e,c)},t.metadata={ruleName:"type-literal-delimiter",description:o.Utils.dedent(n||(n=a.__makeTemplateObject(["\n            Checks that type literal members are separated by semicolons.\n            Enforces a trailing semicolon for multiline type literals."],["\n            Checks that type literal members are separated by semicolons.\n            Enforces a trailing semicolon for multiline type literals."]))),optionsDescription:"Not configurable.",options:null,optionExamples:[!0],type:"style",typescriptOnly:!0},t.FAILURE_STRING_MISSING="Expected type literal to use ';' to separate members.",t.FAILURE_STRING_COMMA="Expected type literal to use ';' instead of ','.",t.FAILURE_STRING_TRAILING="Did not expect single-line type literal to have a trailing ';'.",t}(o.Rules.AbstractRule);function c(e){var t=e.sourceFile;r.forEachChild(t,function i(n){l.isTypeLiteralNode(n)&&function(i){i.members.forEach(function(n,a){var r=n.end-1,o=a===i.members.length-1&&l.isSameLine(t,i.getStart(t),i.getEnd()),c=t.text[r];switch(c){case";":o&&p(s.FAILURE_STRING_TRAILING);break;case",":p(s.FAILURE_STRING_COMMA);break;default:o||p(s.FAILURE_STRING_MISSING)}function p(t){e.addFailureAt(r,1,t)}})}(n),r.forEachChild(n,i)})}t.Rule=s}});
//# sourceMappingURL=22.8fa7cff8.chunk.js.map